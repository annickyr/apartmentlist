import { AppClient } from "./client/AppClient";
import { RecordClient } from "./client/RecordClient";
import { FileClient } from "./client/FileClient";
export declare type Auth = Omit<ApiTokenAuth, "type"> | Omit<PasswordAuth, "type"> | Omit<SessionAuth, "type">;
declare type ApiTokenAuth = {
    type: "apiToken";
    apiToken: string | string[];
};
declare type PasswordAuth = {
    type: "password";
    username: string;
    password: string;
};
declare type SessionAuth = {
    type: "session";
};
declare type BasicAuth = {
    username: string;
    password: string;
};
declare type KintoneAuthHeader = {
    "X-Cybozu-Authorization": string;
    Authorization?: string;
} | {
    "X-Cybozu-API-Token": string;
    Authorization?: string;
} | {
    "X-Requested-With": "XMLHttpRequest";
    Authorization?: string;
};
export declare class KintoneRestAPIClient {
    record: RecordClient;
    app: AppClient;
    file: FileClient;
    private bulkRequest_;
    private headers;
    private baseUrl?;
    constructor(options?: {
        baseUrl?: string;
        auth?: Auth;
        guestSpaceId?: number | string;
        basicAuth?: BasicAuth;
    });
    getBaseUrl(): string | undefined;
    getHeaders(): KintoneAuthHeader;
    private buildAuth;
    private buildHeaders;
    private buildParams;
    bulkRequest(params: {
        requests: Array<{
            method: string;
            api: string;
            payload: object;
        }>;
    }): Promise<object[]>;
}
export {};
