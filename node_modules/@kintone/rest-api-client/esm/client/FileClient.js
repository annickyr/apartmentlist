var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import FormData from "form-data";
import { buildPath } from "../url";
var FileClient = /** @class */ (function () {
    function FileClient(client, guestSpaceId) {
        this.client = client;
        this.guestSpaceId = guestSpaceId;
    }
    FileClient.prototype.uploadFile = function (params) {
        var path = this.buildPathWithGuestSpaceId({
            endpointName: "file"
        });
        var _a = params.file, name = _a.name, data = _a.data;
        var formData = new FormData();
        formData.append("file", data, name);
        return this.client.postData(path, formData);
    };
    FileClient.prototype.downloadFile = function (params) {
        var path = this.buildPathWithGuestSpaceId({
            endpointName: "file"
        });
        return this.client.getData(path, params);
    };
    FileClient.prototype.buildPathWithGuestSpaceId = function (params) {
        return buildPath(__assign(__assign({}, params), { guestSpaceId: this.guestSpaceId }));
    };
    return FileClient;
}());
export { FileClient };
